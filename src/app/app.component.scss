$size: 75px;
$boxColor: #0ff7;

.wrapper {
    min-height: 100vh;
    display: flex;
    justify-content: center;
    align-items: center;
    perspective: 8*$size;
    perspective-origin: 50% 33%;
    position: absolute;
    top: 0;
    width: 100%;
    overflow: hidden;
}

.scene {
    position: relative;
    transform-style: preserve-3d;
}

.moon {
    width: $size;
    height: $size;
    border-radius: 50%;
    background-color: lightblue;

    position: absolute;
    left: -6*$size;
    bottom: 3.5*$size;

    background-image: radial-gradient(
        circle at center,
        lightblue,
        30%,
        #000
    );

    .moonlight {
        position: absolute;
        top: -25%;
        left: -25%;
        border-radius: 50%;
        width: 150%;
        height: 150%;
        background: radial-gradient(lightblue, transparent 75%);
        background-size: 70% 70%;
        background-repeat: no-repeat;
        background-position: center;
        animation: pulse 2s infinite linear;
    }

    @keyframes pulse {
        0% {
            background-size: 70% 70%;
        }
        50% {
            background-size: 100% 100%;
        }
      }
}

.cube {
    position: absolute;

    .top {
        background: $boxColor;
        position: absolute;
        background: $boxColor;
        transform: translateY(-50%) rotateX(90deg);
        box-shadow: 0 0 0.5*$size #000a inset;
    }
    .bottom {
        background: $boxColor;
        position: absolute;
        background: $boxColor;
        bottom: 0;
        transform: translateY(50%) rotateX(90deg);
        box-shadow: 0 0 0.5*$size #000;
    }

    .left, .right, .front, .back {
        background: $boxColor;
        position: absolute;
        width: 100%;
        height: 100%;
        box-shadow: 0 0 0.5*$size #000a inset;
    }

    &.cube1 {
        bottom: -.99*$size;
        left: 8.3*-$size;

        width: 2*$size;
        height: 2*$size;

        .top {
            width: 2*$size;
            height: 2*$size;
        }

        .bottom {
            width: 2*$size;
            height: 2*$size;
        }

        .front { transform: translateZ(1*$size) }
        .right { transform: rotateY(90deg) translateZ(1*$size) }
        .back { transform: rotateY(180deg) translateZ(1*$size) }
        .left { transform: rotateY(270deg) translateZ(1*$size) }
    }

    &.cube2 {
        bottom: -.99*$size;
        left: 6.1*-$size;

        width: 1.5*$size;
        height: 3*$size;

        .top {
            width: 1.5*$size;
            height: 1.5*$size;
        }

        .bottom {
            width: 1.5*$size;
            height: 1.5*$size;
        }

        .front { transform: translateZ(.75*$size) }
        .right { transform: rotateY(90deg) translateZ(.75*$size) }
        .back { transform: rotateY(180deg) translateZ(.75*$size) }
        .left { transform: rotateY(270deg) translateZ(.75*$size) }
    }

    &.cube3 {
        bottom: -.99*$size;
        left: 4.6*-$size;

        width: 1.5*$size;
        height: 1.75*$size;

        .top {
            width: 1*$size;
            height: 1.5*$size;
        }

        .bottom {
            width: 1*$size;
            height: 1.5*$size;
        }

        .front { 
            transform: translateZ(.75*$size);
            width: 1*$size;
        }
        .back {
            transform: rotateY(180deg) translateZ(.75*$size);
            width: 1*$size;
        }
        .right { transform: rotateY(90deg) translateZ(.25*$size) }
        .left { transform: rotateY(270deg) translateZ(.75*$size) }
    }

    &.cube4 {
        bottom: -.99*$size;
        left: 3.35*-$size;

        width: 1.5*$size;
        height: 4.5*$size;

        .top {
            width: 1.5*$size;
            height: 1.5*$size;
        }

        .bottom {
            width: 1.5*$size;
            height: 1.5*$size;
        }

        .front { transform: translateZ(.75*$size) }
        .right { transform: rotateY(90deg) translateZ(.75*$size) }
        .back { transform: rotateY(180deg) translateZ(.75*$size) }
        .left { transform: rotateY(270deg) translateZ(.75*$size) }
    }

    &.cube5 {
        bottom: -.99*$size;
        left: 1.5*-$size;

        width: 1.75*$size;
        height: 6*$size;

        .top {
            width: 1.75*$size;
            height: 1.75*$size;
        }

        .bottom {
            width: 1.75*$size;
            height: 1.75*$size;
        }

        .front { transform: translateZ(.875*$size) }
        .right { transform: rotateY(90deg) translateZ(.875*$size) }
        .back { transform: rotateY(180deg) translateZ(.875*$size) }
        .left { transform: rotateY(270deg) translateZ(.875*$size) }
    }

    &.cube6 {
        bottom: -.99*$size;
        left: .5*$size;

        width: 1.875*$size;
        height: 5*$size;

        .top {
            width: 1.875*$size;
            height: 1.875*$size;
        }

        .bottom {
            width: 1.875*$size;
            height: 1.875*$size;
        }

        .front { transform: translateZ(.9375*$size) }
        .right { transform: rotateY(90deg) translateZ(.9375*$size) }
        .back { transform: rotateY(180deg) translateZ(.9375*$size) }
        .left { transform: rotateY(270deg) translateZ(.9375*$size) }
    }

    &.cube7 {
        bottom: -4*-$size;
        left: .7*$size;

        width: 1.5*$size;
        height: .5*$size;

        .top {
            width: 1.5*$size;
            height: 1.5*$size;
        }

        .front { transform: translateZ(.75*$size) }
        .right { transform: rotateY(90deg) translateZ(.75*$size) }
        .back { transform: rotateY(180deg) translateZ(.75*$size) }
        .left { transform: rotateY(270deg) translateZ(.75*$size) }
    }
    
    &.cube8 {
        bottom: -.99*$size;
        left: 2.8*$size;

        width: 1.875*$size;
        height: 5.25*$size;

        .top {
            width: 1.875*$size;
            height: 1.875*$size;
        }

        .bottom {
            width: 1.875*$size;
            height: 1.875*$size;
        }

        .front { transform: translateZ(.9375*$size) }
        .right { transform: rotateY(90deg) translateZ(.9375*$size) }
        .back { transform: rotateY(180deg) translateZ(.9375*$size) }
        .left { transform: rotateY(270deg) translateZ(.9375*$size) }
    }
    
    &.cube9 {
        bottom: -.99*$size;
        left: 5*$size;

        width: 1.5*$size;
        height: 4.25*$size;

        .top {
            width: 1.5*$size;
            height: 1.5*$size;
        }

        .bottom {
            width: 1.5*$size;
            height: 1.5*$size;
        }

        .front { transform: translateZ(.75*$size) }
        .right { transform: rotateY(90deg) translateZ(.75*$size) }
        .back { transform: rotateY(180deg) translateZ(.75*$size) }
        .left { transform: rotateY(270deg) translateZ(.75*$size) }
    }
    
    &.cube10 {
        bottom: -.99*$size;
        left: 6.75*$size;

        width: 1.25*$size;
        height: 3.25*$size;

        .top {
            width: 1.25*$size;
            height: 1.25*$size;
        }

        .bottom {
            width: 1.25*$size;
            height: 1.25*$size;
        }

        .front { transform: translateZ(.625*$size) }
        .right { transform: rotateY(90deg) translateZ(.625*$size) }
        .back { transform: rotateY(180deg) translateZ(.625*$size) }
        .left { transform: rotateY(270deg) translateZ(.625*$size) }
    }
}

.floor {
    width: 20*$size;
    height: 10*$size;
    background-image:
        radial-gradient(#0000, #000 75%),
        repeating-conic-gradient(
            from 45deg,
            #111 0deg 90deg,
            #222 90deg 180deg
        );
    background-size: 100%, $size $size;
    position: absolute;
    transform:
        translate(-50%, -50%)
        rotateX(90deg);
    top: $size;
}





// @import compass;


// n is number of stars required
@function multiple-box-shadow ($n) {
  $value: '#{random(2000)}px #{random(2000)}px #FFF';
  @for $i from 2 through $n {
    $value: '#{$value} , #{random(2000)}px #{random(2000)}px #FFF';
  }
  @return unquote($value);
}

$shadows-small:  multiple-box-shadow(700);
$shadows-medium: multiple-box-shadow(200);
$shadows-big:    multiple-box-shadow(100);

.starsWrap {
    height: 100vh;
    // background: radial-gradient(closest-side, #730a 0%, #000 66%, #000 100%);
    background: #000;
    overflow: hidden;

    #stars {
        width: 1px;
        height: 1px;
        background: transparent;
        box-shadow: $shadows-small;
        animation: animStar 50s linear infinite;
          
        &:after {
            content: " ";
            position: absolute;
            top: 2000px;
            width: 1px;
            height: 1px;
            background: transparent;
            box-shadow: $shadows-small;
        }
    }
        
    #stars2 {
        width: 2px;
        height: 2px;
        background: transparent;
        box-shadow: $shadows-medium;
        animation: animStar 100s linear infinite;
        
        &:after {
            content: " ";
            position: absolute;
            top: 2000px;
            width: 2px;
            height: 2px;
            background: transparent;
            box-shadow: $shadows-medium;
        }
    }
        
    #stars3 {
        width: 3px;
        height: 3px;
        background: transparent;
        box-shadow: $shadows-big;
        animation: animStar 150s linear infinite;
          
        &:after {
            content: " ";
            position: absolute;
            top: 2000px;
            width: 3px;
            height: 3px;
            background: transparent;
            box-shadow: $shadows-big;
        }
    }
    
    #title {
        position: absolute;
        top: 66%;
        left: 0;
        right: 0;
        
        color: #FFF;
        text-align: center;
        font-family: 'lato',sans-serif;
        font-weight: 300;
        font-size: 50px;
        letter-spacing: 10px;
        z-index: 1;
        
        span {
            background: -webkit-linear-gradient(white, #38495a);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
        }
    }
}
    
@keyframes animStar {
    from {
        transform: translateY(-2000px);
    }	
    to {
        transform: translateY(0px);
    }
}
    